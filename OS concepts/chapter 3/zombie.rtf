{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset178 GeezaPro;\f1\fnil\fcharset0 LucidaGrande;\f2\froman\fcharset0 Palatino-Roman;
\f3\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red26\green23\blue24;\red19\green156\blue235;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c13725\c12157\c12549;\cssrgb\c0\c67843\c93725;\cssrgb\c0\c0\c0;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid1\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid101\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww16000\viewh8540\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qr\partightenfactor0

\f0\fs24 \cf0 \'cc\'e6\'c7\'c8 \'d3\'e6\'c7\'e1 \uc0\u1777 
\f1 :
\f0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl300\sa240\partightenfactor0
\ls1\ilvl0
\f2\fs26\fsmilli13333 \cf2 {\listtext	.	}\expnd0\expndtw0\kerning0
When a process terminates, its resources are deallocated by the operating system. However, its entry in the process table must remain there until the parent calls 
\f3\fs29\fsmilli14667 wait()
\f2\fs26\fsmilli13333 , because the process table contains the process\'92s exit status. A process that has terminated, but whose parent has not yet called 
\f3\fs29\fsmilli14667 wait()
\f2\fs26\fsmilli13333 , is known as a 
\b \cf3 zombie 
\b0 \cf2 process. All processes transition to this state when they terminate, but generally they exist as zombies only briefly. Once the parent calls 
\f3\fs29\fsmilli14667 wait()
\f2\fs26\fsmilli13333 , the process identifier of the zombie process and its entry in the process table are released. 
\f3\fs24 \cf4 \uc0\u8232 \
\pard\tx720\pardeftab720\sl300\sa240\qr\partightenfactor0

\f0 \cf4 \'ca\'e6\'d6\uc0\u1740 \'cd
\f3  
\f0 \'c8\uc0\u1740 \'d4\'ca\'d1 \'d1\'c7\'cc\'da \'c8\'e5 \'81\'c7\u1740 \'c7\'e4 \u1740 \u1705  \'81\'d1\'e6\'d3\'d3
\f1 \uc0\u8235 :
\f0 \uc0\u8236 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf2 A process terminates when it finishes executing its final statement and asks the operating system to delete it by using the 
\f3\fs29\fsmilli14667 exit() 
\f2\fs26\fsmilli13333 system call. At that point, the process may return a status value (typically an integer) to its parent process (via the 
\f3\fs29\fsmilli14667 wait() 
\f2\fs26\fsmilli13333 system call). All the resources of the process\'97including physical and virtual memory, open files, and 
\fs24 I/O 
\fs26\fsmilli13333 buffers\'97are deallocated by the operating system. 
\f3\fs24 \cf4 \
\pard\tx720\pardeftab720\sl300\sa240\qr\partightenfactor0

\f1 \cf4 orphans:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl300\sa240\partightenfactor0
\ls2\ilvl0
\f2\fs26\fsmilli13333 \cf2 \kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
Now consider what would happen if a parent did not invoke 
\f3\fs29\fsmilli14667 wait() 
\f2\fs26\fsmilli13333 and instead terminated, thereby leaving its child processes as 
\b \cf3 orphans
\b0 \cf2 . Linux and 
\fs24 UNIX 
\fs26\fsmilli13333 address this scenario by assigning the 
\f3\fs29\fsmilli14667 init 
\f2\fs26\fsmilli13333 process as the new parent to orphan processes. (Recall from Figure 3.8 that the 
\f3\fs29\fsmilli14667 init 
\f2\fs26\fsmilli13333 process is the root of the process hierarchy in 
\fs24 UNIX 
\fs26\fsmilli13333 and Linux systems.) The 
\f3\fs29\fsmilli14667 init 
\f2\fs26\fsmilli13333 process periodically invokes 
\f3\fs29\fsmilli14667 wait()
\f2\fs26\fsmilli13333 , thereby allowing the exit status of any orphaned process to be collected and releasing the orphan\'92s process identifier and process-table entry. 
\f3\fs24 \cf4 \uc0\u8232 \
\pard\tx720\pardeftab720\sl300\sa240\qr\partightenfactor0
\cf4 \
}