{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset178 GeezaPro;\f2\froman\fcharset0 Palatino-Roman;
\f3\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red26\green23\blue24;\red0\green0\blue0;\red19\green156\blue235;
}
{\*\expandedcolortbl;;\cssrgb\c13725\c12157\c12549;\cssrgb\c0\c0\c0;\cssrgb\c0\c67843\c93725;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 prevalent: 
\f1 \'d4\'c7\uc0\u1740 \'da
\f0 \
primitive: 
\f1 \'c7\'e6\'e1\uc0\u1740 \'e5\'a1 \'c8\'cf\'e6\u1740 
\f0 \
dedicated: 
\f1 \'c7\'ce\'ca\'d5\'c7\'d5\uc0\u1740 
\f0 \
rigid: 
\f1 \'d3\'dd\'ca
\f0  
\f1 \'e6
\f0  
\f1 \'d3\'ce\'ca
\f0 \
\
\
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf2 \expnd0\expndtw0\kerning0
Embedded computers are the most prevalent form of computers in existence. These devices are found everywhere, from car engines and manufacturing robots to 
\fs24 DVD
\fs26\fsmilli13333 s and microwave ovens. They tend to have very specific tasks. The systems they run on are usually primitive, and so the operating systems provide limited features. Usually, they have little or no user interface, preferring to spend their time monitoring and managing hardware devices, such as automobile engines and robotic arms. 
\f3\fs24 \cf3 \

\f2\fs26\fsmilli13333 \cf2 These embedded systems vary considerably. Some are general-purpose computers, running standard operating systems \'97 such as Linux \'97 with special-purpose applications to implement the functionality. Others are hard- ware devices with a special-purpose embedded operating system providing just the functionality desired. Yet others are hardware devices with application- specific integrated circuits (
\b\fs24 \cf4 ASIC
\fs26\fsmilli13333 s
\b0 \cf2 ) that perform their tasks without an operating system. 
\f3\fs24 \cf3 \

\f2\fs26\fsmilli13333 \cf2 The use of embedded systems continues to expand. The power of these devices, both as standalone units and as elements of networks and the web, is sure to increase as well. Even now, entire houses can be computerized, so that a central computer\'97either a general-purpose computer or an embedded system\'97can control heating and lighting, alarm systems, and even coffee makers. Web access can enable a home owner to tell the house to heat up before she arrives home. Someday, the refrigerator can notify the grocery store when it notices the milk is gone. 
\f3\fs24 \cf3 \

\f2\fs26\fsmilli13333 \cf2 Embedded systems almost always run 
\b \cf4 real-time operating systems
\b0 \cf2 . A real-time system is used when rigid time requirements have been placed on the operation of a processor or the flow of data; thus, it is often used as a control device in a dedicated application. Sensors bring data to the computer. The computer must analyze the data and possibly adjust controls to modify the sensor inputs. Systems that control scientific experiments, medical imaging systems, industrial control systems, and certain display systems are real- time systems. Some automobile-engine fuel-injection systems, home-appliance controllers, and weapon systems are also real-time systems. 
\f3\fs24 \cf3 \

\f2\fs26\fsmilli13333 \cf2 A real-time system has well-defined, fixed time constraints. Processing 
\i\b must 
\i0\b0 be done within the defined constraints, or the system will fail. For instance, it would not do for a robot arm to be instructed to halt 
\i\b after 
\i0\b0 it had smashed into the car it was building. A real-time system functions correctly only if it returns the correct result within its time constraints. Contrast this system with a time-sharing system, where it is desirable (but not mandatory) to respond quickly, or a batch system, which may have no time constraints at all. 
\f3\fs24 \cf3 \

\f2\fs26\fsmilli13333 \cf2 In Chapter 6, we consider the scheduling facility needed to implement real-time functionality in an operating system. In Chapter 9, we describe the design of memory management for real-time computing. Finally, in Chapters 18 and 19, we describe the real-time components of the Linux and Windows 7 operating systems. 
\f3\fs24 \cf3 \
}