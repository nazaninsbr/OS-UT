{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 TimesNewRomanPSMT;\f1\froman\fcharset0 Times-Roman;\f2\ftech\fcharset0 Wingdings-Regular;
\f3\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue218;\red193\green194\blue135;
\red26\green23\blue24;\red19\green156\blue235;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c88235;\cssrgb\c80000\c80000\c60000;
\cssrgb\c13725\c12157\c12549;\cssrgb\c0\c67843\c93725;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl740\sa240\partightenfactor0

\f0\fs64 \cf2 \cb3 \expnd0\expndtw0\kerning0
What OS does with respect to DMA? 
\f1\fs24 \cb1 \
\pard\pardeftab720\sl520\sa240\partightenfactor0

\f2\fs45\fsmilli22667 \cf4 \cb3 \uc0\u61550  
\f0\fs58\fsmilli29333 \cf2 Determination of buffers, pointers, and counters for the I/O device 
\f1\fs24 \cb1 \

\f2\fs45\fsmilli22667 \cf4 \cb3 \uc0\u61550  
\f0\fs58\fsmilli29333 \cf2 Sending the start command 
\f1\fs24 \cb1 \

\f2\fs45\fsmilli22667 \cf4 \cb3 \uc0\u61550  
\f0\fs58\fsmilli29333 \cf2 The Completion of transfer will be notified by an interrupt 
\f1\fs24 \cb1 \
\
\
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f3\fs26\fsmilli13333 \cf5 A general-purpose computer system consists of 
\fs24 CPU
\fs26\fsmilli13333 s and multiple device controllers that are connected through a common bus. Each device controller is in charge of a specific type of device. Depending on the controller, more than one device may be attached. For instance, seven or more devices can be attached to the 
\b \cf6 small computer-systems interface \cf5 (
\fs24 \cf6 SCSI
\fs26\fsmilli13333 \cf5 ) 
\b0 controller. A device controller maintains some local buffer storage and a set of special-purpose registers. The device controller is responsible for moving the data between the peripheral devices that it controls and its local buffer storage. Typically, operating systems have a 
\b \cf6 device driver 
\b0 \cf5 for each device controller. This device driver understands the device controller and provides the rest of the operating system with a uniform interface to the device. 
\f1\fs24 \cf2 \

\f3\fs26\fsmilli13333 \cf5 To start an 
\fs24 I/O 
\fs26\fsmilli13333 operation, the device driver loads the appropriate registers within the device controller. The device controller, in turn, examines the contents of these registers to determine what action to take (such as 
\f1 \'93
\f3 read a character from the keyboard
\f1 \'94
\f3 ). The controller starts the transfer of data from the device to its local buffer. Once the transfer of data is complete, the device controller informs the device driver via an interrupt that it has finished its operation. The device driver then returns control to the operating system, possibly returning the data or a pointer to the data if the operation was a read. For other operations, the device driver returns status information. 
\f1\fs24 \cf2 \

\f3\fs26\fsmilli13333 \cf5 This form of interrupt-driven 
\fs24 I/O 
\fs26\fsmilli13333 is fine for moving small amounts of data but can produce high overhead when used for bulk data movement such as disk 
\fs24 I/O
\fs26\fsmilli13333 . To solve this problem, 
\b \cf6 direct memory access \cf5 (
\fs24 \cf6 DMA
\fs26\fsmilli13333 \cf5 ) 
\b0 is used. After setting up buffers, pointers, and counters for the 
\fs24 I/O 
\fs26\fsmilli13333 device, the device controller transfers an entire block of data directly to or from its own buffer storage to memory, with no intervention by the 
\fs24 CPU
\fs26\fsmilli13333 . Only one interrupt is generated per block, to tell the device driver that the operation has completed, rather than the one interrupt per byte generated for low-speed devices. While the device controller is performing these operations, the 
\fs24 CPU 
\fs26\fsmilli13333 is available to accomplish other work. 
\f1\fs24 \cf2 \
}